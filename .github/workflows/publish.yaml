name: Build and Publish Docker Image

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: nativu5/cranedev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      matrix:
        include:
          - dockerfile: "./Dockerfile"
            tag: "latest"
            platforms: "linux/amd64, linux/arm64"
          - dockerfile: "./CI.Dockerfile"
            tag: "ci"
            platforms: "linux/amd64, linux/arm64"
          - dockerfile: "./full.Dockerfile"
            tag: "full"
            platforms: "linux/amd64, linux/arm64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: "v2.2.4"

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}
          platforms: ${{ matrix.platforms }}
          push: ${{ github.event_name != 'pull_request' }}

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        run: echo "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
